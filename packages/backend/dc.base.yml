#
# backend/dc.base.yml
#
# Base for 'docker-compose[.app].yml'.
#
# Note:
#   DC overlays do allow for removal of mounts (e.g. by overriding them to point to '/dev/nul'; mounts are overridable
#   by their container side path as a key). But that would be too fine-grained. This file just provides the common
#   things for both '(nothing)' and 'app' and they add their specific mounts.
#
# Intentions:
#   Launch the emulators, with configuration generated by 'firebase[.app].js'.
#
# Docker Compose (v3) note:
#   BE CAREFUL with use of pipe ('|') or '&&' in the commands! See -> https://stackoverflow.com/a/68590318/14455
#
# References:
#   Overview of Docker Compose (Docker docs)
#     -> https://docs.docker.com/compose/
#   Compose file version 3 reference
#     -> https://docs.docker.com/compose/compose-file/compose-file-v3/
#
services:
  #
  # Expects from derived definitions:
  #   - environment: PROJECT_ID to be defined ('demo-...')
  #
  # Note! Running this causes 'functions/node_modules' (an empty folder) to be created, on the host. Would be nice if
  #     we could avoid that. Perhaps just use that as the DC-side 'node_modules' cache, and disallow 'npm install'
  #     host-side (like it already is!). #tbd
  #
  emul-base:   # used for 'npm run start', 'npm test', 'npm run app:start'
    extends:
      file: ../../dc/firebase-emulators/base.yml
      service: base
    volumes:
      # --- RO
      - ./tmp/firebase.json:/work/firebase.json:ro      # emul-for-app overrides this
      # --- cached (may change; watched by the Emulators)
      - ./functions:/work/functions:cached
      - ./firestore.indexes.json:/work/firestore.indexes.json:cached
      - ./firestore.rules:/work/firestore.rules:cached

    working_dir: /work
    environment:
      - CHOKIDAR_USEPOLLING=true
        # Allows emulators to see changes to (host side, volume mapped) Security Rules, Cloud Functions
