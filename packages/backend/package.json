{
  "name": "@local/back-end",
  "description": "Sample back-end",
  "license": "MIT",
  "private": true,
  "type": "module",
  "files": [
    "firebase.json",
    "firestore.indexes.json",
    "firestore.rules",
    "functions/*.js"
  ],
  "engines": {
    "node": "14 || >= 16 < 16.6 || >= 16.6.1",
    "npm": ">= 7.7.0"
  },
  "scripts": {
    "test": "if port-is-taken --silent 4000 ; then npm run _test_all; else docker compose run --rm test ; fi",
    "//test:dc": "docker compose run --rm test",
    "_test_all": "npm run test:fns:all && npm run test:rules:all",
    "  -": "",
    "start": "docker compose up",
    "//start": "docker compose up --abort-on-container-exit",
    "  - -": "",
    "test:fns:logging": "NODE_OPTIONS=\"--experimental-vm-modules --experimental-json-modules\" jest --config test-fns/jest.config.js -f logging.test.js --verbose --detectOpenHandles --all",
    "test:fns:userInfo": "NODE_OPTIONS=--experimental-vm-modules jest --config test-fns/jest.config.js -f userInfo.test.js --verbose --detectOpenHandles --all",
    "test:fns:all": "NODE_OPTIONS=\"--experimental-vm-modules --experimental-json-modules\" jest --config test-fns/jest.config.js --verbose --detectOpenHandles --all",
    "  -  -": "",
    "test:rules:invites": "NODE_OPTIONS=--experimental-vm-modules jest --config test-rules/jest.config.js -f invitesC.test.js --verbose --detectOpenHandles --all",
    "test:rules:projects": "NODE_OPTIONS=--experimental-vm-modules jest --config test-rules/jest.config.js -f projectsC/index.test.js --verbose --detectOpenHandles --all",
    "test:rules:projectsSymbols": "NODE_OPTIONS=--experimental-vm-modules jest --config test-rules/jest.config.js -f projectsC/symbolsC.test.js --verbose --detectOpenHandles --all",
    "test:rules:projectsUserInfo": "NODE_OPTIONS=--experimental-vm-modules jest --config test-rules/jest.config.js -f projectsC/userInfoC.test.js --verbose --detectOpenHandles --all",
    "test:rules:userInfo": "NODE_OPTIONS=--experimental-vm-modules jest --config test-rules/jest.config.js -f userInfoC.test.js --verbose --detectOpenHandles --all",
    "test:rules:all": "NODE_OPTIONS=--experimental-vm-modules jest --config test-rules/jest.config.js --verbose --detectOpenHandles --all",
    "  - --": "",
    "lint": "eslint .",
    "  -   -": "",
    "//ci:test": "docker-compose run test",
    "ci:test": "npm run -s ci:seq",
    "ci:seq": "concurrently --kill-others --success=first -n emul,test \"npm run _ci_emul\" \"wait-for 4000 && node hack/ack-await && npm run -s _ci_seq\"",
    "_ci_emul": "npx firebase emulators:start --project=demo-2",
    "_ci_seq": "npm run test:fns:all && npm run test:rules:all",
    "  - - -": "",
    "ci:deploy": "npm run -s _prepFunctions && npm run -s _prepDeploy && firebase deploy --only functions,firestore",
    "  -  --": "",
    "pretest": "npm run -s _prepFunctions",
    "prestart": "npm run -s _prepFunctions",
    "preci:test": "npm run -s _prepFunctions",
    "_prepFunctions": "npm --prefix functions install",
    "_prepDeploy": "sed -i -E 's/(\"node\": \")(.+)(\")/\\114\\3/' functions/package.json"
  },
  "devDependencies": {
    "@local/tools": "file:../../tools",
    "concurrently": "^6.2.1",
    "eslint-plugin-node": "^11.1.0",
    "firebase-jest-testing": "^0.0.4-alpha.3",
    "jest": "^27.0.6",
    "node-fetch": "^3.0.0-beta.10"
  },
  "//comments": {
    "engines.node": [
      "'>=14.3' for '—harmony-top-level-await'",
      "'>=13.2' for ES module support",
      "",
      "Avoid 16.6.0 - a bad 🍏 -> https://github.com/facebook/jest/issues/11708"
    ],
    "engines.npm": [
      "There is no single *pressing* reason why, but the two (6 vs. 7) seem slightly incompatible. Instead of being",
      "bitten by this, since npm 7 is now stable and released, let's require it.",
      "",
      "NOTE: 'npm@6' does not seem to observe the 'engines.npm' - it still runs!"
    ],
    "scripts": {
      "ci:test": [
        "//ci:test shows the command Cloud Build *could* use, to run the tests in Docker.",
        "It does not seem to work, however. Wait for Docker Compose v2 on Linux.",
        "",
        "ci:test is around to allow native execution (with npm and 'concurrently', without Docker Compose).",
        "If we can use 'docker-compose', 'concurrently' can leave the stage."
      ]
    }
  }
}
