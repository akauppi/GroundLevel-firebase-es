{
  "name": "@local/back-end",
  "description": "Sample back-end",
  "license": "MIT",
  "private": true,
  "type": "module",
  "engines": {
    "node": ">= 16.6.1",
    "npm": ">= 7.7.0"
  },
  "scripts": {
    "test": "npm run -s start && npm run -s _test1",
    "_test1": "npm run test:fns:all && npm run test:rules:all",
    "-- ": "",
    "start": "npm run -s _prepDC && PROJECT_ID=demo-2 docker compose run --rm warmed-up && echo \"Firebase Emulators are running. Use 'docker compose down' to run them down.\n\"",
    "_prepDC": "npm run -s _touchEm && npm run -s _genFirebaseJson && npm run -s _genDatabaseRulesJson",
    "-- -": "",
    "test:fns:logging": "FIREBASE_JSON=tmp/firebase.json NODE_OPTIONS=--experimental-vm-modules jest --config test-fns/jest.config.js -f logging.test.js --verbose --all",
    "test:fns:userInfo": "FIREBASE_JSON=tmp/firebase.json NODE_OPTIONS=--experimental-vm-modules jest --config test-fns/jest.config.js -f userInfo.test.js --verbose --all",
    "test:fns:all": "FIREBASE_JSON=tmp/firebase.json NODE_OPTIONS=--experimental-vm-modules jest --config test-fns/jest.config.js --verbose --all",
    "test:fns:allDC": "NODE_OPTIONS=--experimental-vm-modules jest --config test-fns/jest.config.js --verbose --all",
    "--  -": "",
    "test:rules:invites": "FIREBASE_JSON=tmp/firebase.json NODE_OPTIONS=--experimental-vm-modules jest --config test-firestore-rules/jest.config.js -f invitesC.test.js --verbose --all",
    "test:rules:projects": "FIREBASE_JSON=tmp/firebase.json NODE_OPTIONS=--experimental-vm-modules jest --config test-firestore-rules/jest.config.js -f projectsC/index.test.js --verbose --all",
    "test:rules:projectsSymbols": "FIREBASE_JSON=tmp/firebase.json NODE_OPTIONS=--experimental-vm-modules jest --config test-firestore-rules/jest.config.js -f projectsC/symbolsC.test.js --verbose --all",
    "test:rules:projectsUserInfo": "FIREBASE_JSON=tmp/firebase.json NODE_OPTIONS=--experimental-vm-modules jest --config test-firestore-rules/jest.config.js -f projectsC/userInfoC.test.js --verbose --all",
    "test:rules:userInfo": "FIREBASE_JSON=tmp/firebase.json NODE_OPTIONS=--experimental-vm-modules jest --config test-firestore-rules/jest.config.js -f userInfoC.test.js --verbose --all",
    "test:rules:all": "FIREBASE_JSON=tmp/firebase.json NODE_OPTIONS=--experimental-vm-modules jest --config test-firestore-rules/jest.config.js --verbose --detectOpenHandles --all",
    "test:rules:allDC": "NODE_OPTIONS=--experimental-vm-modules jest --config test-firestore-rules/jest.config.js --verbose --detectOpenHandles --all",
    "--  - ": "",
    "test:rules2:logging": "FIREBASE_JSON=tmp/firebase.json NODE_OPTIONS=--experimental-vm-modules jest --config test-database/jest.config.js -f logging.test.js --verbose --detectOpenHandles --all",
    "test:rules2:all": "FIREBASE_JSON=tmp/firebase.json NODE_OPTIONS=--experimental-vm-modules jest --config test-database/jest.config.js --verbose --detectOpenHandles --all",
    "test:rules2:allDC": "NODE_OPTIONS=--experimental-vm-modules jest --config test-database/jest.config.js --verbose --detectOpenHandles --all",
    "-- --": "",
    "lint": "eslint .",
    "--   -": "",
    "first:prepare": "npm run -s _genFirebaseJson && npm run -s _genDatabaseRulesJson",
    "--   - ": "",
    "app:start": "npm run -s _prepAppDC && PROJECT_ID=demo-main DOT_APP=.app docker compose -f docker-compose.app.yml run --rm emul-for-app-launched && echo \"Firebase Emulators for the web app are running.\n\"",
    "_prepAppDC": "npm run -s _touchEmApp && npm run -s _genFirebaseJsonApp && npm run -s _genDatabaseRulesJson",
    "-- - -": "",
    "dc:warm-up": "npm run test:fns:allDC && npm run test:rules:allDC",
    "--  --": "",
    "ci:test": "npm run test:fns:allDC && npm run test:rules:allDC",
    "-- ---": "",
    "postinstall": "if [ -z $BUILDER_OUTPUT ]; then npm run -s _postinstall_local; else npm run -s _postinstall_ci; fi",
    "_postinstall_local": "install -d tmp/functions-node_modules && docker compose -f docker-compose.tools.yml run --rm functions-install",
    "_postinstall_ci": "npm --prefix functions install && npm run -s _touchEm && npm run -s _touchEmApp && npm run -s _genFirebaseJson && npm run -s _genFirebaseJsonApp",
    "_touchEm": "(cd logs && touch firebase-debug.log firestore-debug.log database-debug.log ui-debug.log)",
    "_touchEmApp": "(cd logs && touch firebase-debug.app.log firestore-debug.app.log database-debug.app.log ui-debug.app.log)",
    "_genFirebaseJson": "node --input-type=module -e \"import o from './firebase.js'; console.log(JSON.stringify(o));\" > tmp/firebase.json",
    "_genFirebaseJsonApp": "node --input-type=module -e \"import o from './firebase.app.js'; console.log(JSON.stringify(o));\" > tmp/firebase.app.json",
    "_genDatabaseRulesJson": "node --input-type=module -e \"import o from './database.rules.js'; console.log(JSON.stringify(o, null, 2));\" > tmp/database.rules.json"
  },
  "devDependencies": {
    "firebase-admin": "^11.0.0",
    "firebase-jest-testing": "^0.0.5-beta.1",
    "jest": "^28.1.2"
  },
  "//comments": {
    "engines.node": [
      "Avoid 16.6.0 - a bad 🍏 -> https://github.com/facebook/jest/issues/11708"
    ],
    "engines.npm": [
      ">= 7.7.0 because of this (only matters for 'npm publish') -> https://github.com/npm/cli/issues/2834"
    ],
    "scripts": {
      "[ -z $BUILDER_OUTPUT ]": [
        "Precedes commands only to be run in CI."
      ],
      "dc:warm-up": [
        "Since ~ 'firebase-tools' 10.6.0, also Rules seem to need warming up."
      ],
      "ci:{test|deploy}": [
        "These are the commands CI will use."
      ],
      "first:prepare": [
        "For '/first/deploy.sh' - makes sure the configuration files are generated."
      ],
      "_postinstall_local": [
        "Important to create the 'tmp/functions-node_modules' in the host side; otherwise, WSL2 Docker",
        "will create one with 'root' access (instead of the current user)."
      ],
      "_touchEm": [
        "Important that files to be mapped as DC volumes exist as files."
      ]
    }
  }
}
