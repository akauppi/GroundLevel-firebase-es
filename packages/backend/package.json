{
  "name": "@local/back-end",
  "description": "Sample back-end",
  "license": "MIT",
  "private": true,
  "type": "module",
  "engines": {
    "node": "18"
  },
  "scripts": {
    "dc:warm-up": "npm run -s _warmup1 && npm run -s _warmup2",
    "_warmup1": "NODE_OPTIONS=--experimental-vm-modules jest --config test-fns/jest.config.js --verbose --detectOpenHandles --all",
    "_warmup2": "NODE_OPTIONS=--experimental-vm-modules jest --config test-firestore-rules/jest.config.js --verbose --detectOpenHandles --all",
    "-- - -": "",
    "ci:warm-up": "npm run -s _ci:fns:all",
    "ci:test": "npm run -s _ci:fns:all && npm run -s _ci:rules:all",
    "_ci:fns:all": "NODE_OPTIONS=--experimental-vm-modules jest --config test-fns/jest.config.js --detectOpenHandles --verbose --all",
    "_ci:rules:all": "NODE_OPTIONS=--experimental-vm-modules jest --config test-firestore-rules/jest.config.js --verbose --detectOpenHandles --all",
    "-- ---": "",
    "postinstall": "if [ -z $BUILDER_OUTPUT ]; then npm run -s _postinstall_local; else npm run -s _postinstall_ci; fi",
    "_postinstall_local": "install -d tmp/functions/node_modules && docker compose -f docker-compose.tools.yml run --rm functions-install",
    "_postinstall_ci": "npm --prefix functions install && npm run -s _genFirebaseJsonCI && npm run -s _genDatabaseRulesJson",
    "--    -": "",
    "_genFirebaseJson": "make tmp/firebase.json",
    "_genFirebaseJsonCI": "make tmp/firebase.ci.json",
    "_genDatabaseRulesJson": "make tmp/database.rules.json"
  },
  "devDependencies": {
    "firebase-admin": "^11.0.1",
    "firebase-jest-testing": "^0.0.5-beta.4",
    "jest": "^29.0.3"
  },
  "//devDependencies": {
    "firebase-jest-testing": "file:../../../firebase-jest-testing/package"
  },
  "//comments": {
    "engines.node": [
      "Needs: built-in fetch, top-level await"
    ],
    "scripts": {
      "[ -z $BUILDER_OUTPUT ]": [
        "Precedes commands only to be run in CI."
      ],
      "ci:{warm-up|test}": [
        "We welcome these in the same, humble 'package.json'. Running CI is a lot like native development."
      ],
      "dc:warm-up": [
        "'--detectOpenHandles' is needed in Windows 10+WSL2 (works without it in macOS). Keep it."
      ],
      "_postinstall_local": [
        "Important to create the 'tmp/functions/node_modules' in the host side; otherwise, WSL2 Docker will create one",
        "with 'root' access (instead of the current user)."
      ],
      "_postinstall_ci": [
        "Prepares things for CI steps:",
        "- tmp/firebase.ci.json",
        "- tmp/database.rules.json (not used in CI; stop generating if we know it's not going to be used)"
      ]
    }
  }
}
