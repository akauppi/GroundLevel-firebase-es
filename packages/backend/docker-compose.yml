#
# docker-compose.yml
#
# Launch emulators; provide a means to warm them up.
#
# Used by:
#   - manual development ('docker compose up -d' directly or via 'npm run up')
#   - CI
#     - with 'docker-compose.ci.yml' overrides
#
# Environment:
#   - CI_BUILDER_IMAGE (optional); name of the builder image.
#
# Intentions:
#   Within a Docker universe,
#     - launch Firebase Emulators using 'firebase.json'
#       - exposing ports for Firestore and Cloud Functions (Firebase Auth port not needed)
#
# Docker Compose (v3) note:
#   BE CAREFUL with use of pipe ('|') or '&&' in the commands! See -> https://stackoverflow.com/a/68590318/14455
#
# References:
#   Overview of Docker Compose (Docker docs)
#     -> https://docs.docker.com/compose/
#   Compose file version 3 reference
#     -> https://docs.docker.com/compose/compose-file/compose-file-v3/
#
version: '3.2'
  # 3.2: adds 'volumes' long syntax

services:
  # Launch Firebase Emulators, with certain warning and info messages suppressed.
  #
  emul:
    image: ${CI_BUILDER_IMAGE:-firebase-ci-builder:9.17.0-node16-npm7}
    ports:
      - "4000:4000"
      - "5002:5002"
      - "6767:6767"
      # Keep ports aligned with 'firebase.json'
    volumes:
      - .:/work
    working_dir: /work
    command: bash -o pipefail -c
      'echo "Launching Docker... üê≥" &&
      firebase emulators:start --project=demo-2
        | grep -v -E "Detected demo project ID|You are not signed in to the Firebase CLI|You are not currently authenticated"'
    # Keep project ID in sync with 'test-fns/setup.jest.js'

  # WARM UP the engines
  #
  # Firebase Emulators are SLOW to wake. This part runs a minimal set of tests (the results of which are not used),
  # to wake up the necessary subsystems server-side. This results in more dependable test times in the actual tests.
  #
  warm-up:
    build:
      context: ../../dc-tools/n-user/
      args:
        - NODE=${NODE_V:-16}
    ports:
      - "6768:6768"
    volumes:
      - .:/work2
    working_dir: /work2
    command: sh -o pipefail -c
      'wait-for-it emul:6767 --timeout=20 &&
      npm run dc:warm-up &&
      socat TCP-LISTEN:6768,fork TCP:emul:6767
      '
    environment:
      - EMUL_HOST=emul
      - WARM_UP_TIMEOUT=25000
          # seen timeouts with: 19000 (macOS, DC 4.0); normally ~3500 ms
    depends_on: ['emul']
    # Enable manual launch to debug 'emul' launch, only.
    #profiles: ['manual']

  # Used via 'docker compose run --rm warmed-up'.
  #
  # A separate target, so that the warm-up log output is always visible only in Docker Desktop, not the terminal
  # output for something like 'npm test' (if launched with a cold DC).
  #
  warmed-up:
    build:
      context: ../../dc-tools/n-user/
      args:
        - NODE=${NODE_V:-16}
    command: sh -o pipefail -c
      'wait-for-it warm-up:6768 --timeout=60
      '
      # macOS: seen cases where 40s timed out
    depends_on: ['warm-up']
    profiles: ['manual']
