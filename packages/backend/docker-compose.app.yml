#
# docker-compose.app.yml
#
# A version of the DC definition for front-end development and testing.
#
# Expects:
#   'DOT_APP' env.var. to be ".app"
#
# Note:
#   Ports exposed at the host are defined so that they do not overlap with those of 'docker-compose.yml'.
#   This means backend containers can be left running while doing front-end development.
#
# References:
#   - Share Compose configurations between files and projects (Docker Compose docs)
#     -> https://docs.docker.com/compose/extends/
#
services:
  emul-for-app:
    extends:
      file: docker-compose.base.yml
      service: emul-base
    ports:
      - "5003:5003"
      - "6768:6768"
      - "6801:6801"
      - "9101:9101"
      - "4001:4001"
        # Ports that don't overlap those for backend development.
        # Keep the ports aligned with '../app'.

    environment:
      - CHOKIDAR_USEPOLLING=true
    healthcheck:
      test: "nc -z localhost 6768 && nc -z localhost 5003 && nc -z localhost 6801"
      # Note: 'nc' in that image doesn't handle checking multiple ports at once.
      interval: 1.0s
      start_period: 25s

  # No warm-up (as with the backend)

  emul-for-app-launched:
    image: node:16-alpine
    command: sh -c
      '[ ${DOT_APP} == ".app" ] || ( >&2 echo "ERROR. Please provide 'DOT_APP=.app' env.var. Just Do it. :)"; false )
      '
    depends_on:
      emul-for-app:
        condition: service_healthy
    profiles: ['manual']
