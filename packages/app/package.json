{
  "name": "@local/app",
  "description": "Sample front end",
  "license": "MIT",
  "private": true,
  "author": "<akauppi@gmail.com>",
  "type": "module",
  "files": [
    "dist/*"
  ],
  "exports": {
  },
  "bin": {
    "check-no-links": "./tools/check-no-links.sh",
    "gen-vite-env-local": "./tools/gen-vite-env-local.js",
    "gen-vite-env-online": "./tools/gen-vite-env-online.js"
  },
  "engines": {
    "node": ">=16.6.1"
  },
  "scripts": {
    "dev": "npm run dev:local",
    "-- ": "",
    "test": "npm run -s _emulRunning && npm run -s _genEnvLocal && docker compose run --rm vite-local-launched && CYPRESS_defaultCommandTimeout=10000 cypress run",
    "-- -": "",
    "dev:local": "npm run -s _emulPrimed && npm run -s _genEnvLocal && docker compose down vite-local && docker compose run --rm --service-ports vite-local",
    "_emulRunning": "(cd ../backend && npm run app:start)",
    "_emulPrimed": "npm run -s _emulRunning && npm run -s _prime",
    "_prime": "docker compose run --rm prime",
    "dc:launch:local": "(cd .. && npm install --no-save esbuild) && vite --mode dev_local",
    "--  -": "",
    "ci:launch": "vite --mode dev_local",
    "-- --": "",
    "dev:online": "npm run -s _genEnvOnline && docker compose -f docker-compose.online.yml up vite-3001",
    "dc:launch:online": "(cd .. && npm install --no-save esbuild) && vite --mode dev_online",
    "--   -": "",
    "lint": "eslint --ext .js,.vue src || true",
    "-- - -": "",
    "build": "npm run -s _checkNoLinks && vite build",
    "--  --": "",
    "_checkNoLinks": "check-no-links || ( >&2 echo \"ERROR: 'npm' links not allowed in a production build. Use them only at development.\n\tUse 'npm list' to see them; 'npm unlink x; npm install' to remove.\n\"; false)",
    "//_checkStaging": "[[ -f ../../firebase.${ENV-staging}.js ]] || ( >&2 echo \"ERROR: '../../firebase.${ENV-staging}.js' is missing; see 'README.md' on how to create one.\n\"; false)",
    "_genEnvLocal": "FIREBASE_JSON=../backend/firebase.app.json gen-vite-env-local --project=demo-main > .env.local",
    "_genEnvOnline": "gen-vite-env-online > .env.online",
    "_genEnv": "FIREBASE_JSON=../backend/firebase.app.json EMUL_HOST=emul-for-app gen-vite-env-local --project=demo-main > .env.local",
    "-- ---": "",
    "postbuild": "cp public/* dist/",
    "postinstall": "npm install --prefix .. --no-save esbuild && npm run -s _genEnv",
    "//postinstall": "[ -z $BUILDER_OUTPUT ] || (npm install --prefix .. --no-save esbuild && npm run -s _genEnv)"
  },
  "dependencies": {
    "aside-keys": "file:/~/Git/aside-keys/package",
    "firebase": "^9.8.0",
    "vue": "^3.2.33",
    "vue-router": "^4.0.15"
  },
  "//dependencies": {
    "aside-keys": "^0.0.3-alpha.1"
  },
  "devDependencies": {
    "@local/self": "file:.",
    "@vitejs/plugin-vue": "^2.3.2",
    "cypress": "9.6.0",
    "eslint-plugin-cypress": "^2.12.1",
    "eslint-plugin-vue": "^8.7.1",
    "prettier": "2.6.2",
    "sass": "^1.51.0",
    "vite": "^2.9.8",
    "vue-eslint-parser": "^8.0.1"
  },
  "//comments": {
    "devDependencies": {
      "cypress": [
        "Using specific version (not '^') to reduce the number of binaries downloaded (600MB+ each): du -d 1 -h ~/Library/Caches/Cypress/"
      ],
      "prettier": [
        "> when Prettier is installed or updated, itâ€™s strongly recommended to specify the exact version in package.json: \"2.3.0\", not \"^2.3.0\".",
        "Thus, following suit."
      ],
      "sass": [
        "Needed if you use '<style scoped lang=\"scss\">' in your styles."
      ]
    },
    "engines.node": [
      "16.6.1+ because of -> https://github.com/facebook/jest/issues/11708"
    ],
    "scripts": {
      "| grep -v": [
        "Do *not* chain multiple 'grep -v's. That causes output to be completely hidden, for some reason.",
        "A single 'grep -v -E' (needs -E) with '|' is fine."
      ],
      "test / Cypress timeout": [
        "When cold-starting DC with 'npm test' on macOS, the 2nd test has been seen to take ~~5s~~ over 8s (default",
        "timeout is 4s). Thus, 'CYPRESS_defaultCommandTimeout'."
      ],
      "[ -z $BUILDER_OUTPUT ]": [
        "Precedes commands only to be run in CI."
      ],
      "dev:local": [
        "Careful balance between DC 'up' and 'run'.",
        "- 'npm test' launches DC 'vite-local' (and it keeps running)",
        "- 'npm run dev[:local]' uses 'run' to show the console output in the terminal (instead of DC Dashboard);",
        "  this requires it to bring down earlier instance (by 'npm test'), because the port would be taken"
      ],
      "dc:launch:local": [
        "Installs a Linux version of 'esbuild' to the parent level (so as to not mess up 'node_modules', and also",
        "to bypass the read-only nature of that folder's sharing. It's a hack, but it works.."
      ],
      "ci:test": [
        "CI calls directly 'docker compose' since it's using a docker image that doesn't have 'npm'. We reflect the",
        "command here, mostly for just documenting the use."
      ],
      "_prime": [
        "The project name used _must_ match that in '../backend/', used for launching the emulators.",
        "",
        "To develop the 'prime.dc', rebuild by:",
        " 'docker compose build prime && docker compose run --rm prime'"
      ],
      "_touchEm": [
        "Vital for DC that files to be mapped to the container exist *before* the DC command."
      ],
      "_genEnv": [
        "Used by CI. Creates a '.env' file and after that, the mode used by 'dc:launch' ('--mode dev_local') doesn't",
        "matter, any more.."
      ]
    }
  }
}
