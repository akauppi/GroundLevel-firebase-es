#
# app/docker-compose.yml
#
# DC definition for 'npm run dev[:local]' and (via an overlay), for 'npm run dev:online'.
#
# Note:
#   DC overlays (using the same service name and loading multiple files with '-f') does not allow for REMOVAL of
#   eg. mounts, but it does allow concatenation to the mounts. Thus the common stuff is in here.
#
# Override:
#   PORT (3000|3001)
#   MODE ("local"|"online")
#
# Docker compose of:
#   - Vite      front end Hot-Module Reloading; hosting
#
# Intentions:
#   Host and hot-module-reload the front end.
#
# Docker Compose (v3) note:
#   BE CAREFUL with use of pipe ('|') or '&&' in the commands! See -> https://stackoverflow.com/a/68590318/14455
#
# References:
#   Cypress > Continuous Integration > Introduction
#     -> https://docs.cypress.io/guides/continuous-integration/introduction#What-is-Continuous-Integration
#   Overview of Docker Compose (Docker docs)
#     -> https://docs.docker.com/compose/
#   Compose file version 3 reference
#     -> https://docs.docker.com/compose/compose-file/compose-file-v3/
#
services:
  vite-dev:   # used for both 'npm run dev:local' and 'npm run dev:online'
    build:
      context: tools/vite.dc
    #ports:
    #  - "3000:3000"
        #
        # tbd. Wasn't able to use '$PORT' here (must separately override it for both 'local' and 'online').
        #   <<
        #     WARN[0000] The "PORT" variable is not set. Defaulting to a blank string.
        #   <<
    volumes:
      # --- RO
      #- ../../node_modules:/node_modules:ro                  # eslint comes from the top
      - ./package.json:/work/package.json:ro
      - ./node_modules:/work/node_modules:ro         # note: should not have 'esbuild' in it
      - ./vite.config.js:/work/vite.config.js:ro     # Vite needs a restart to see config changes, thus 'ro'.
      - ./rollup.chunks.js:/work/rollup.chunks.js:ro
      # --- cached
      - ./public:/work/public:cached
      - ./src:/work/src:cached
      - ./dev:/work/dev:cached
      # --- other
      - ./tmp/.vite:/work/tmp/.vite:delegated    # persistence between runs
      #
      # HACK. during DEV, have 'file:/~/Git/...' npm link resolve.
      #- ${HOME}/Git/aside-keys/package:/work/node_modules/aside-keys:ro

    working_dir: /work
    command: sh -c
      'npm config set update-notifier false &&

      npm run dc:launch:$$MODE
      '
    environment:
      - SENTRY_DNS
      # Following overrun by 'docker-compose.online.yml'
      - PORT=3000
      - MODE=local

    healthcheck:
      test: "nc -z localhost $$PORT"
      interval: 0.9s
      start_period: 25s

  #---
  # Separate target; priming with 'local/{docs|users}.js'
  #
  # NOTE:
  #   How reliable is use of 'host.docker.internal' (works on macOS; Docker 4.7.1)
  #
  # References:
  #   "How to access host port from docker container" (SO)
  #     -> https://stackoverflow.com/questions/31324981/how-to-access-host-port-from-docker-container
  #
  # Note:
  #   'host.docker.internal' likely provides access to _all_ the host ports. It's not ideal, but if it works for us,
  #   good.
  #
  prime:
    build:
      context: tools/prime.dc
    volumes:
      # --- RO
      - ./local:/work/data:ro
      - ../backend/firebase.app.json:/work/firebase.json:ro
    command:
      firebase-prime --host host.docker.internal --project demo-main data/docs.js data/users.js
    environment:
      - FIRESTORE_PORT=6768
      - AUTH_PORT=9101
      - PROJECT=demo-main
    profiles: ['manual']

  #---
  # Separate target; build production delivery
  #
  # Note:
  #   Vite (3.0.0-alpha.1) has difficulties importing the Rollup plugin, if globally installed. Node.js, on the other
  #   hand, does not provide installation to '/node_modules'.
  #
  #   Solved by installing globally ('-g') and then linking to '/node_modules'.
  #
  #   See 'TRACK.md'; if 'rollup-plugin-visualizer' were to provide an 'exports' section, one day..
  #
  build:
    build:
      context: tools/vite.dc
    volumes:
      # --- RO
      - ./package.json:/work/package.json:ro
      - ./node_modules:/work/node_modules:ro         # note: should not have 'esbuild' in it
      - ./vite.config.js:/work/vite.config.js:ro     # Vite needs a restart to see config changes, thus 'ro'.
      - ./rollup.chunks.js:/work/rollup.chunks.js:ro
      - ../../firebase.${ENV:-staging}.js:/work/firebase.config.js:ro
      # --- RO (since we're a task)
      - ./src:/work/src:ro
      - ./prod:/work/prod:ro
      - ./public:/work/public:ro
      # --- Output
      - ./dist:/work/dist:delegated
      - ./stats.html:/work/stats.html:delegated
      # --- other
      - ../../../branding/favicon.png/:/work/public/favicon.png:ro
      - ./tmp/.vite:/work/tmp/.vite:delegated    # persistence between runs
    command: sh -c
      '
      npm install -g rollup-plugin-visualizer &&

      (cd / && mkdir node_modules && cd node_modules && ln -s $$NODE_PATH/rollup-plugin-visualizer .) &&
      vite build
      '
    profiles: ['manual']

  # DISABLED (using native 'http-server')
  #|#---
  #|# Separate target (may be undocumented); serve the contents of 'dist/' (does NOT rebuild from sources!!!).
  #|#
  #|_serve:
  #|  build:
  #|    context: tools/serve.dc
  #|  ports:
  #|    - 8080:8080
  #|  volumes:
  #|    # --- RO
  #|    - ./dist:/work/dist:ro
  #|  command: sh -c
  #|    'http-server ./dist -p 8080
  #|    '
  #|  profiles: ['manual']
