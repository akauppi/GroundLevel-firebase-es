#!/bin/bash
set -eu -o pipefail

#
# Build the 'firebase-emulators' Docker image
#
# Requires:
#	  - docker
#   - that one has set up Artifact Registry in the currently active GCP project
#     ..and run:
#     <<
#       $ gcloud auth configure-docker us-central1-docker.pkg.dev
#     <<
#

# Note: We can update this version less frequently than the one used for development. Once you do change it, remove
#     earlier images from Artifact Registry.
#
# Note: >= 11.2.1 to avoid Artifact Registry API enabling need, by hand.
#
_VERSION=11.13.0

_DOCKERPATH=../dc/firebase-tools
_IMAGE_NAME=firebase-emulators

_TAG=${_VERSION}
  # note: can vary the tag, eg. adding a postfix to it

docker build --pull --build-arg FIREBASE_TOOLS_VERSION=${_VERSION} --target firebase-emulators ${_DOCKERPATH} -t ${_IMAGE_NAME}:${_TAG}

#
# Push to Artifact Registry
#
# Requires:
#	  - docker
#   - gcloud
#
_GCP_PROJECT=$(gcloud config get-value project 2>/dev/null)
_AR_FOLDER=builders
  # Change the above, to match your liking (or create such a folder in AR)

# Note: Cloud Build runs in 'us-central1', so no matter where you are in the world, place in that region.
#
AR_IMG=us-central1-docker.pkg.dev/${_GCP_PROJECT}/${_AR_FOLDER}/${_IMAGE_NAME}:${_TAG}

LOCAL_IMG=${_IMAGE_NAME}:${_TAG}

echo ""
echo "Going to push ${AR_IMG}"
echo ""
read -p "Continue (y/N)?" -n 1 CHOICE
echo
if [ "$CHOICE" = y ]; then
  docker tag ${LOCAL_IMG} ${AR_IMG}
  docker push ${AR_IMG}
fi
