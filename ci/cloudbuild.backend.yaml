#
# ci/cloudbuild.backend.yaml
#
# Triggers:
#   - PR is made or changed; changes affect 'packages/backend' (or '/package.json')
#
# Cloud Build project:
#   - Common CI builder (not project specific; no deploys!)
#     https://console.cloud.google.com/cloud-build/triggers?project=ci-builder
#
# Expects:
#   - Artifact Registry of the GCP project to contain a "firebase-ci-builder" image.
#
# Uses images:
#   - node:16-alpine
#   - firebase-ci-builder   (project specific)
#   - docker/compose
#
# Runtime environment:
#   - Current directory is '/workspace/...', based on the 'dir' field
#
#   - env.variables:
#     HOME=/builder/home
#     BUILDER_OUTPUT=/builder/outputs
#
# Note:
#   Using 'node:16' to run 'npm install' means that the packages are installed as root, and 'node_modules' is read-only
#   to regular users (of other images). This is normally not a concern.
#

steps:
# Install
#
- name: node:${_NODE_VER}-alpine
  entrypoint: sh
  args: ['-c', '
    [ $PROJECT_ID == ci-builder ] || ( >&2 echo "ERROR: Please change to the ''ci-builder'' project: gcloud config set project ci-builder"; false ) &&

    npm install &&
    npm --prefix packages/backend install
  ']
  # State:
  #   - 'packages/backend/functions/node_modules' have been populated
  #   - 'packages/backend/tmp/firebase.json' has been created
  #   - 'packages/backend/tmp/database.rules.json' has been created

#DEBUG
- name: node:${_NODE_VER}-alpine
  entrypoint: sh
  args: ['-c', '
    cat tmp/firebase.json
  ']
  dir: packages/backend

# DEBUG:
#
# USE THIS TO DEBUG CASES where the emulators don't start (or to see warm-up timings).
#
# Note: 'docker compose up' never returns, so if this is enabled, it's eventually a timeout.
#
- name: docker/compose:${_DOCKER_COMPOSE_TAG}
  #args: ['-f', 'docker-compose.ci.yml', 'up', 'emul']
  args: ['-f', 'docker-compose.ci.yml', 'up', 'warm-up']
  dir: packages/backend
  env:
    - CI_BUILDER_IMAGE=us-central1-docker.pkg.dev/${PROJECT_ID}/${_AR_FOLDER}/firebase-emulators:${_BUILDER_TAG}

# --- --- --- üì£‚ö†Ô∏èü™§üö®
# WARNING!!!
#
#   If there is a problem with Cloud Functions, INSTEAD OF EXITING, THE EMULATORS KEEP RUNNING!! This is NOT
#   ideal for developers, because it gives the feeling things would be right. INSTEAD, FIREBASE EMULATORS SHOULD FAIL
#   if there is a major problem like Cloud Functions cannot be started. **PLEASE PUT PRESSURE ON FIREBASE TO CHANGE
#   THIS BEHAVIOUR if you agree with it.** Saves all of our time. Thank You.
#
#   ^-- Above applies only to the case where there would be failures INITIALLY, when the emulators are loaded.
#       In this case, I think emulators should refuse to launch. The emulators also have hot-reload capabilities
#       for functions and Rules, and for this use case, it's vital that they keep running.
#
# --- --- --- üì£‚ö†Ô∏èü™§üö®

# Launch emul/warm-up in DC, keeps them running in the background.
#
- name: docker/compose:${_DOCKER_COMPOSE_TAG}
  args: ['-f', 'docker-compose.ci.yml', 'run', '--rm', 'warmed-up']
  dir: packages/backend
  env:
    - CI_BUILDER_IMAGE=us-central1-docker.pkg.dev/${PROJECT_ID}/${_AR_FOLDER}/firebase-emulators:${_BUILDER_TAG}

- name: node:${_NODE_VER}-alpine
  entrypoint: npm
  args: ['run', 'ci:test']
  dir: packages/backend
  env:
    - EMUL_HOST=emul

- name: node:${_NODE_VER}-alpine
  entrypoint: npm
  args: ['run', 'lint']
  dir: packages/backend

# --- Timeout
#
# Cloud Build:
#   - 2:38  (no lint)
#
# OLD:
#   - 2:17, 2:15, 2:46
#
timeout: 300s

# (Old results for reference, before 10-Sep-21; 'node:16' image)
# Cloud Build
#   - native, no lint:          1:51, 1:45  # (old results)
#   - DC/Docker, with lint:     3:13
#   - DC/native, with lint:     2:35

substitutions:
  _BUILDER_TAG: 11.2.0
  _DOCKER_COMPOSE_TAG: 1.29.2
  _NODE_VER: "16"
  _AR_FOLDER: builders
    # You may use any name, or create such a folder in AR.
