#
# ci/cloudbuild.merged.yaml
#
# Triggers:
#   - new stuff is merged to a branch ('$BRANCH_NAME'); changes either in 'packages/backend/**',
#     'packages/app/**', 'packages/app-deploy-ops/**', root 'package.json' or 'tools'
#
# GCP Project:
#   Intended to be run in the *same* GCP project that carries the Firebase deployment.
#
# Responsibility:
#   - test and deploy backend
#   - (if that succeeded) test, build and deploy front-end
#
# Runtime environment:
#   - Current directory is '/workspace/...', based on the 'dir' field
#
#   - env.variables (just some):
#     PWD=/workspace
#     HOME=/builder/home
#
# Note:
#   This approach causes unnecessary deployments (we don't have a way to tell, within the script, whether the changes
#   were on the backend or front-end side), but it does keep the order of deployments.
#
#   Doing two scripts in parallel could lead to a situation where the front-end is deployed prior to its (with new
#   features) back-end being available.
#
#   See 'ci/APPROACH.md' for a deeper discussion...
#

steps:
# Root install
- name: gcr.io/$PROJECT_ID/firebase-ci-builder:${_BUILDER_TAG}
  entrypoint: bash
  args: ['-c', 'apk --no-cache add patch && npm install']

# Backend
#
# (keep similar to 'cloudbuild.master-pr.backend.yaml')
#
- name: gcr.io/$PROJECT_ID/firebase-ci-builder:${_BUILDER_TAG}
  entrypoint: npm
  args: ['install']
  dir: packages/backend
- name: gcr.io/$PROJECT_ID/firebase-ci-builder:${_BUILDER_TAG}
  entrypoint: npm
  args: ['run', 'ci:test']
  dir: packages/backend
# DEPLOY
- name: gcr.io/$PROJECT_ID/firebase-ci-builder:${_BUILDER_TAG}
  entrypoint: firebase
  args: ['use', '$PROJECT_ID']
  dir: packages/backend
- name: gcr.io/$PROJECT_ID/firebase-ci-builder:${_BUILDER_TAG}
  entrypoint: npm
  args: ['run', 'ci:deploy']
  dir: packages/backend

# App
#
# (keep similar to 'cloudbuild.master-pr.app.yaml' if it changes..)
#
- name: gcr.io/$PROJECT_ID/firebase-ci-builder:${_BUILDER_TAG}
  entrypoint: npm
  args: ['install']
  dir: packages/app
  env: ['CYPRESS_INSTALL_BINARY=0']
- name: gcr.io/$PROJECT_ID/firebase-ci-builder:${_BUILDER_TAG}
  entrypoint: npm
  args: ['run', 'build']
  dir: packages/app

# App-deploy-ops
#
- name: gcr.io/$PROJECT_ID/firebase-ci-builder:${_BUILDER_TAG}
  entrypoint: npm
  args: ['install']
  dir: packages/app-deploy-ops
- name: gcr.io/$PROJECT_ID/firebase-ci-builder:${_BUILDER_TAG}
  entrypoint: firebase
  args: ['use', '$PROJECT_ID']
  dir: packages/app-deploy-ops
- name: gcr.io/$PROJECT_ID/firebase-ci-builder:${_BUILDER_TAG}
  entrypoint: npm
  args: ['run', 'ci:build']
  dir: packages/app-deploy-ops
# DEPLOY
- name: gcr.io/$PROJECT_ID/firebase-ci-builder:${_BUILDER_TAG}
  entrypoint: npm
  args: ['run', 'ci:deploy']
  dir: packages/app-deploy-ops

# --- Timeout
#
# Cloud Build:  5:34
#
timeout: 600s

substitutions:
  _BUILDER_TAG: 9.16.0-node16-npm7
  #_BUILDER_TAG: 9.12.1-node16-npm7
