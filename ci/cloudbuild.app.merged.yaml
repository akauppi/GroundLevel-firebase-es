#
# ci/cloudbuild.app.merged.yaml
#
# Triggers:
#   - new stuff is merged to a branch ('$BRANCH_NAME'); changes either in 'packages/app/**' or root 'package.json'.
#
# Cloud Build project:
#   Production/staging GCP project (deploys to itself).
#
# Responsibility:
#   - (maybe test,) build and deploy front-end
#
# Uses images:
#   - node:{16|18}-alpine (stock image)
#   - firebase-emulators  (pushed to Artifact Registry)   The image also contains Firebase CLI we use for deployment
#   - docker/compose      (stock image)
#
# Runtime environment:
#   - Current directory is '/workspace/...', based on the 'dir' field
#
#   - env.variables (just some):
#     PWD=/workspace
#     HOME=/builder/home
#
# References:
#   - Cloud Build > Substituting variable values
#     https://cloud.google.com/build/docs/configuring-builds/substitute-variable-values
#
steps:
# Flight check
- name: node:${_NODE_VER}-alpine
  entrypoint: sh
  args: ['-c',
    '[ $PROJECT_ID != ci-builder ] || ( >&2 echo "ERROR: Please change to the deployment project: gcloud config set project <project-id>"; false )
    '
    #?[ ! -z $$SENTRY_DSN ] || ( >&2 echo "WARN: Please provide ''SENTRY_DSN'' to enable operational monitoring."; false )
  ]
  #?secretEnv:
  #?  - SENTRY_DSN

# - Install
- name: node:${_NODE_VER}-alpine
  entrypoint: sh
  args: ['-c', '
    npm config set update-notifier false &&

    npm install &&
    npm --prefix packages/app install --omit=optional
  ']
    # npm --prefix packages/backend install &&     <-- if tests are enabled
  #|env:
  #|  - CYPRESS_INSTALL_BINARY=0
  #|  - FIRESTORE_PORT=6767
  #|  - FUNCTIONS_PORT=5002
  #|  - AUTH_PORT=9100

  # State:
  # packages/app/firebase.hosting.json    has the deployment configuration

# - Sign in to Firebase

# Create 'firebase.live.js' based on the current project's config.
#
# Note: 'firebase use' is folder specific and expects: ...tbd.
#
- name: $_1
  entrypoint: sh
  args: ['-c', '
    firebase --config tmp/firebase.hosting.json \
      use $PROJECT_ID && 

    CAPTURE=$$( firebase apps:sdkconfig
      | grep -E ''^\s+".+":\s.+,'' | grep -E "projectId|appId|locationId|apiKey|authDomain|databaseURL"
    ) &&
    echo "export default { $$CAPTURE }" > ../../firebase.live.js
  ']
  dir: packages/app

# Test
#
# 1-to-1 from 'cloudbuild.app.yaml'.
#
#| TEMPORARILY DISABLED
#|- name: docker/compose:${_DOCKER_COMPOSE_TAG}
#|  args: ['-f', 'docker-compose.app.ci.yml', 'run', '--rm', 'emul-for-app-launched']
#|  dir: packages/backend
#|  env:
#|    - CI_BUILDER_IMAGE=$_1
#|
#|- name: docker/compose:${_DOCKER_COMPOSE_TAG}
#|  args: ['-f', 'docker-compose.ci.yml', 'run', 'vite-ci-launched']
#|  dir: packages/app
#|  env:
#|    - CI_BUILDER_IMAGE=$_1
#|
#|- name: cypress/included:${_CYPRESS_TAG}
#|  args: ['run', '--headless']
#|  dir: packages/app
#|  env:
#|    - CYPRESS_baseUrl=http://vite:3002
#|    - CYPRESS_defaultCommandTimeout=10000

# Build

- name: docker/compose:${_DOCKER_COMPOSE_TAG}
  args: ['-f', 'docker-compose.tools.prod.yml', 'run', 'build']
  dir: packages/app
  env:
    - ENV=live
    - RELEASE=${SHORT_SHA:-0}
    #- SENTRY_SAMPLE_RATE=${_SENTRY_SAMPLE_RATE:-}

# DEPLOY
#
- name: $_1
  entrypoint: sh
  args: ['-c', '
    firebase --config tmp/firebase.hosting.json \
      deploy --only hosting
  ']
  dir: packages/app

# --- Timeout
#
#
# OLD:
# Cloud Build (no tests): 2:00, 1:52
# (old CI; no tests): 2:03
#
timeout: 400s

# Note: Substitutions don't seem to get parsed recursively (would like to use '$_BUILDER_TAG' to define the image)
#
substitutions:
  _1: us-central1-docker.pkg.dev/ci-builder/builders/firebase-emulators:11.3.0
  _DOCKER_COMPOSE_TAG: 1.29.2
  _NODE_VER: "18"
  #_CYPRESS_TAG: 9.6.0
  #_SENTRY_SAMPLE_RATE: "1.0" # overridable by CI

# Anything baked into the front end are not really hard secrets, but let's treat them as such.
#
#?availableSecrets:
#?  secretManager:
#?    - versionName: projects/$PROJECT_NUMBER/secrets/SENTRY_DSN/versions/latest
#?      env: 'SENTRY_DSN'
