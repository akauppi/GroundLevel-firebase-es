#
# ci/cloudbuild.app.yaml
#
# Trigger:
#   - PR is made or changed; changes affect 'packages/app' (or '/package.json')
#
# Cloud Build project:
#   - Common CI builder (not project specific; no deploys!)
#
# Uses images:
#   - node:{16|18}-alpine   (stock image)
#   - firebase-emulators    (pushed to Artifact Registry)
#   - docker/compose        (stock image)
#
# Runtime environment:
#   - Current directory is '/workspace/...', based on the 'dir' field
#
#   - env.variables:
#     PWD=/workspace
#     HOME=/builder/home
#     BUILDER_OUTPUT=/builder/outputs
#
# Note:
#   Using 'node:16' to run 'npm install' means that the packages are installed as root, and 'node_modules' is read-only
#   to regular users (of other images). This is normally not a concern.

# tbd. Remove use of 'DATABASE_PORT' - we don't need it, for testing.

steps:
# Install
#
- name: node:${_NODE_VER}-alpine
  entrypoint: sh
  args: ['-c', '
    [ $PROJECT_ID == ci-builder ] || ( >&2 echo "ERROR: Please change to the ''ci-builder'' project: gcloud config set project ci-builder"; false ) &&

    npm config set update-notifier false &&

    npm install &&
    npm --prefix packages/backend install &&
    npm --prefix packages/app install --omit=optional &&
    
    (cd packages/backend && 
      touch firebase-debug.log firestore-debug.log database-debug.log
    )
  ']
    # Note: '--omit=optional' does not matter, in practise (the idea was to not pull in Vite).
    #
    #   with '--omit=optional':   289 packages added, timing: 18.9, 17.7, 16.9s
    #   without:                  292 packages added, timing: 18.9 s

  env:
    - CYPRESS_INSTALL_BINARY=0    # avoid downloading a GUI
    - FIRESTORE_PORT=6767
    - FUNCTIONS_PORT=5002
    - DATABASE_PORT=6800    # tbd. not sure we use it?
    - AUTH_PORT=9100

  # State:
  #   - packages/backend/functions/node_modules   have been populated
  #   - packages/backend/tmp/firebase.json        has been created
  #   - packages/backend/{firebase|firestore|database}-debug.log      created, so DC can map them

# DEBUG:
#
# USE THIS TO DEBUG CASES where the emulators don't start.
#
# Note: 'docker compose up' never returns, so if this is enabled, it's eventually a timeout.
#
#|- name: docker/compose:${_DOCKER_COMPOSE_TAG}
#|  args: ['-f', 'docker-compose.app.ci.yml', 'up', 'emul-for-app']
#|  dir: packages/backend
#|  env:
#|    - CI_BUILDER_IMAGE=us-central1-docker.pkg.dev/${PROJECT_ID}/${_AR_FOLDER}/firebase-emulators:${_BUILDER_TAG}
#|    - FIRESTORE_PORT=6767
#|    - FUNCTIONS_PORT=5002
#|    #- DATABASE_PORT=6800
#|    - AUTH_PORT=9100

# --- App
#
# Launch emulators and Vite; keeps them running in the background.
#
# Note: No priming of data & users is needed (that's for "dev", we only do "npm test").
#
- name: docker/compose:${_DOCKER_COMPOSE_TAG}
  args: ['-f', 'docker-compose.app.ci.yml', 'run', 'emul-for-app-launched']
  dir: packages/backend
  env:
    - CI_BUILDER_IMAGE=us-central1-docker.pkg.dev/${PROJECT_ID}/${_AR_FOLDER}/firebase-emulators:${_BUILDER_TAG}
    - FIRESTORE_PORT=6767
    - FUNCTIONS_PORT=5002
    - DATABASE_PORT=6800
    - AUTH_PORT=9100

# DEBUG; TERMINAL. Enable if Vite does not launch
#|- name: docker/compose:${_DOCKER_COMPOSE_TAG}
#|  args: ['-f', 'docker-compose.ci.yml', 'up', 'vite-ci']
#|  dir: packages/app
#|  env:
#|    - PORT=3002
#|    - FIRESTORE_PORT=6767
#|    - FUNCTIONS_PORT=5002
#|    - DATABASE_PORT=6800
#|    - AUTH_PORT=9100

# Launches a development build.
#
- name: docker/compose:${_DOCKER_COMPOSE_TAG}
  args: ['-f', 'docker-compose.ci.yml', 'run', 'vite-ci-launched']
  dir: packages/app
  env:
    - PORT=3002
    - FIRESTORE_PORT=6767
    - FUNCTIONS_PORT=5002
    - DATABASE_PORT=6800
    - AUTH_PORT=9100

  # State:
  #   - 'emul-for-app' is running (emulators)
  #   - 'vite:3002' is running, and connected to the above backend

- name: cypress/included:${_CYPRESS_TAG}
  args: ['run', '--headless']
  dir: packages/app
  env:
    - CYPRESS_baseUrl=http://vite:3002
    - CYPRESS_defaultCommandTimeout=20000
    #
    # Tests durations:
    #   1: 10673, 9478 ms
    #   2: 4224, 4920 ms

# Check that a production build passes.
#
- name: docker/compose:${_DOCKER_COMPOSE_TAG}
  args: ['-f', 'docker-compose.tools.ci.yml', 'run', 'build']
  dir: packages/app

- name: node:${_NODE_VER}-alpine
  entrypoint: npm
  args: ['run', 'lint']
  dir: packages/app

# --- Timeout
#
# Cloud Build:
#   - 5:36
#
# OLD:
#   - 5:29, 5:31
#
timeout: 500s

substitutions:
  _BUILDER_TAG: 11.3.0
  _DOCKER_COMPOSE_TAG: 1.29.2
    # https://hub.docker.com/r/docker/compose/tags?page=1&ordering=last_updated
  _NODE_VER: "18"
  _CYPRESS_TAG: 10.3.0
    # https://hub.docker.com/r/cypress/included/tags?page=1&ordering=last_updated
  _AR_FOLDER: builders
